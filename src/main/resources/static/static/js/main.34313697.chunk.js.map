{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTasks.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","delete","sent","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_Date","end_Date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTasks","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","confirm","_x5","Backlog","tasks","project_tasks_prop","ProjectBoard_ProjectTasks_ProjectTasks","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","fullName","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","securityUtils_SecuredRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34313697.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  } catch (error) {}\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for Backlog Actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//Types for security actions\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    //post ==>login request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    //store the tokenin local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set our token in header..\r\n    setJWTToken(token);\r\n\r\n    const decoded = jwt_decode(token);\r\n\r\n    //dispatch to our security header\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_Date: \"\",\r\n      end_Date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_Date: this.state.start_Date,\r\n      end_Date: this.state.end_Date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_Date\"\r\n                      value={this.state.start_Date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_Date\"\r\n                      value={this.state.end_Date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_PROJECT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_Date: \"\",\r\n      end_Date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_Date,\r\n      end_Date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_Date,\r\n      end_Date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_Date: this.state.start_Date,\r\n      end_Date: this.state.end_Date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.start_Date\r\n                    })}\r\n                    name=\"start_Date\"\r\n                    value={this.state.start_Date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.start_Date && (\r\n                    <div className=\"invalid-feedback\">{errors.start_Date}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_Date\r\n                    })}\r\n                    name=\"end_Date\"\r\n                    value={this.state.end_Date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.end_Date && (\r\n                    <div className=\"invalid-feedback\">{errors.end_Date}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTasks extends Component {\r\n  onDeleteClick = (backlog_id, pt_id) => {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  };\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTasks.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTasks);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  try {\r\n    if (\r\n      window.confirm(\r\n        `You are deleting project task ${pt_id}, this action cannot be undone`\r\n      )\r\n    ) {\r\n      await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: DELETE_PROJECT_TASK,\r\n        payload: pt_id\r\n      });\r\n    }\r\n  } catch (error) {}\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTasks from \"./ProjectTasks/ProjectTasks\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTasks key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  updateProjectTask,\r\n  getProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      created_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task Id:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateProjectTask, getProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"./securityUtils/setJWTToken\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public route\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //private route\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}